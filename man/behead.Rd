% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/behead.R
\name{behead}
\alias{behead}
\title{Strip a level of headers from a pivot table}
\usage{
behead(cells, direction, name, types = data_type, drop_na = TRUE)
}
\arguments{
\item{cells}{Data frame. The cells of a pivot table, usually the output of
\code{\link[=tidy_table]{tidy_table()}} or \code{\link[tidyxl:xlsx_cells]{tidyxl::xlsx_cells()}}, or of a subsequent operation on
those outputs.}

\item{direction}{The name of a function that joins headers to data cells, one
of \code{N}, \code{E}, \code{S}, \code{W}, \code{NNW}, \code{NNE}, \code{ENE}, \code{ESE}, \code{SSE}, \code{SSW}. \code{WSW},
\code{WNW}.  \code{ABOVE}, \code{BELOW}, \code{LEFT} and \code{RIGHT} aren't available because they
require certain ambiguities that are better handled by using the functions
directly rather than via \code{\link[=behead]{behead()}}.  See the help file for \code{\link[=join_header]{join_header()}}.}

\item{name}{A name to give the new column that will be created, e.g.
\code{location} if the headers are locations.  Not quoted (not \code{"location"}).}

\item{types}{The name of the column that names the data type of each cell.
Usually called \code{data_types} (the default), this is a character column that
names the other columns in \code{cells} that contain the values of each cell.
E.g.  a cell with a character value will have \code{"character"} in this column.}

\item{drop_na}{logical Whether to filter out headers that have \code{NA} in the
\code{value} column.  Default: \code{TRUE}.  This can happen with the output of
\code{tidyxl::xlsx_cells()}, when an empty cell exists because it has formatting
applied to it, but should be ignored.}
}
\value{
A data frame
}
\description{
\code{\link[=behead]{behead()}} takes one level of headers from a pivot table and
makes it part of the data.  Think of it like \code{\link[tidyr:gather]{tidyr::gather()}}, except that
it works when there is more than one row of headers (or more than one column
of row-headers), and it only works on tables that have first come through
\code{\link[=tidy_table]{tidy_table()}} or \code{\link[tidyxl:xlsx_cells]{tidyxl::xlsx_cells()}}.
}
\examples{
# Load some pivoted data
(x <- purpose$`NNW WNW`)

# Make a tidy representation
cells <- tidy_table(x)
head(cells)
tail(cells)

# Strip the headers and make them into data
tidy <-
  cells \%>\%
  behead(NNW, Sex) \%>\%
  behead(N, `Sense of purpose`) \%>\%
  behead(WNW, `Highest qualification`) \%>\%
  behead(W, `Age group (Life-stages)`) \%>\%
  dplyr::select(-row, -col, -data_type, -chr)
head(tidy)

# Check against the provided 'tidy' version of the data.
dplyr::anti_join(tidy, purpose$Tidy)

# The provided 'tidy' data is missing a row for Male 15-24-year-olds with a
# postgraduate qualification and a sense of purpose between 0 and 6.  That
# seems to have been an oversight by Statistics New Zealand.
}
