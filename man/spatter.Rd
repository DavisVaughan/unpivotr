% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatter.R
\name{spatter}
\alias{spatter}
\title{Spatter a key-values set across multiple columns.}
\usage{
spatter(.data, key, ..., values, types = data_type)
}
\arguments{
\item{data}{A data frame.}
}
\description{
Spatter a key-values set across multiple columns.
}
\examples{
path <- system.file("extdata", "worked-examples.xlsx", package = "unpivotr")
cells <- tidyxl::xlsx_cells(path, sheet = "clean")
rectify(cells)

# This is what you start with: rows describing each data cell alongside its
# headers
cells \%>\%
  behead(N, header) \%>\%
  dplyr::select(row, data_type, header, character, numeric)

# spatter() turns a column of headers into an actual header, a bit like
# tidyr::spread()
cells \%>\%
  behead(N, header) \%>\%
  dplyr::select(row, data_type, header, character, numeric) \%>\%
  spatter(header)

# The difference between spatter() and tidyr::spread() is that spatter() has
# to know which data-type to use for each cell beneath the headers.  By
# default, it looks at the data_type column to decide, but you can choose a
# different column.
cells \%>\%
  behead(N, header) \%>\%
  dplyr::mutate(data_type_2 = "character") \%>\%
  dplyr::select(row, data_type_2, header, character) \%>\%
  spatter(header, types = data_type_2)

# You can instead name one specific column to use for the cell values. In
# this case we use the `address` column, which also help to show what
# spatter() does.
cells \%>\%
  behead(N, header) \%>\%
  dplyr::select(row, header, address) \%>\%
  spatter(header, values = address)

cells \%>\%
  behead(N, header) \%>\%
  dplyr::select(row, col, header) \%>\%
  spatter(header, values = col)

# The column used for the values is consumed before the spread occurs, so if
# it's necessary for demarking the rows, you'll need to create a copy of it
# first.  Otherwise you'll get an error like
# "Duplicate identifiers for rows ..."
cells \%>\%
  behead(N, header) \%>\%
  dplyr::mutate(row2 = row) \%>\%
  dplyr::select(row, header, row2) \%>\%
  spatter(header, values = row2)
}
