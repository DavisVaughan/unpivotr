% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidy_table.R
\name{tidy_table}
\alias{tidy_table}
\title{Convert data frames into a tidy structure}
\usage{
tidy_table(x, rownames = FALSE, colnames = FALSE)
}
\arguments{
\item{x}{A data.frame}

\item{rownames}{Whether to include the column names in the output, Default:
FALSE}

\item{colnames}{Whether to include the row names in the output, Default:
FALSE}
}
\value{
A data.frame with columns 'row' and 'col' (integer) giving the
original position of the 'cells', and any relevant columns for cell values in
their original types: 'chr', 'cplx', 'cplx', 'dbl', 'fctr', 'int', 'lgl', and
'list'.  Row and column names, when included (default), are treated as though
they were cells in the table.
}
\description{
Data frames represent data in a
tabular structure.  \code{tidy_table} takes the row and column position of
each 'cell', and returns that information in a new data frame, alongside the
content of each cell.

This makes certain tasks easier.  For example, a pivot table with multi-row
headers that has been imported into R as a data frame may be easier to
un-pivot by converting it with \code{tidy_table} first.

This is an S3 generic.
}
\examples{
tidy_table(Formaldehyde)
tidy_table(tidyr::nest(chickwts, -feed))
tidy_table(Formaldehyde, colnames = TRUE)
tidy_table(Formaldehyde, rownames = TRUE)
}
